<project name="Triangle" default="compile" basedir=".">

  <!-- * Properties -->
  <property name="classOutputDir" value="build" />
  <property name="test-suite" value="*" />

  <!-- major-specific -->
  <property name="mutation" value=":ALL"/>
  <property name="mutator" value="-XMutator${mutation}"/>
  <property name="major" value="major/bin/javac"/>


  <!-- TARGETS -->

  <!-- ** clean -->
  <target name="clean" description="Clean">
    <delete dir="${classOutputDir}"/>
    <delete>
      <fileset dir="csvfiles" erroronmissingdir="no" includes="*.csv"/>
      <fileset dir="." includes="*.csv"/>
      <fileset dir="." includes="*.log"/>
    </delete>
  </target>

  <!-- ** init -->
  <target name="init" depends="clean">
    <mkdir dir="${classOutputDir}"/>
    <mkdir dir="csvfiles"/>
  </target>

   <!-- ** compile -->
  <target name="compile" depends="init">

    <mkdir dir="${classOutputDir}/classes" />

    <!-- Essential that line numbers and filenames are included in order for PIT to work -->
    <javac srcdir="src"
           includeantruntime="false"
           debug="true"
           debuglevel="source,lines"
           destdir="${classOutputDir}/classes" />
  </target>

  <!-- major-compile -->
  <target name="compile.major" depends="init" description="Compile for major">
    <delete dir="mutants"/>
    <mkdir dir="${classOutputDir}/classes" />
        <javac includeantruntime="true"
               srcdir="src"
              destdir="${classOutputDir}/classes"
                debug="yes"
	             fork="yes"
	       executable="${major}">
            <compilerarg line="${mutator} -J-Dmajor.export.mutants=true"/>
        </javac>
  </target>

  <!-- JUnit-specific -->

  <!-- test path -->
  <path id="test.path">
    <pathelement location="${classOutputDir}/classes" />
    <pathelement location="${classOutputDir}/test-classes" />
    <fileset dir="lib" includes="*.jar"/>
  </path>

  <!-- compile.tests -->
  <target name="compile.tests" depends="compile" description="Compile all tests">
    <mkdir dir="${classOutputDir}/test-classes" />
    <javac includeantruntime="false"
           srcdir="test"
           destdir="${classOutputDir}/test-classes">
      <classpath refid="test.path" />
    </javac>
  </target>

  <!-- test:run junit tests -->
  <target name="test" depends="compile.tests" description="Run specified tests">
    <mkdir dir="${classOutputDir}/test-result" />
    <junit>
      <classpath refid="test.path" />
      <batchtest todir="${classOutputDir}/test-result">
        <!-- set test classes -->
        <fileset dir="test">
          <include name="**/${test-suite}.java" />
        </fileset>
        <formatter type="xml" />
      </batchtest>
    </junit>
    <junitreport todir="${classOutputDir}/test-result">
      <fileset dir="${classOutputDir}/test-result">
        <include name="TEST-*.xml" />
      </fileset>
      <report format="frames" todir="${classOutputDir}/test-result/report" />
    </junitreport>
  </target>

  <!-- major-compile-test -->
  <target name="compile.tests.major" description="Compile all tests for major">
    <mkdir dir="${classOutputDir}/test-classes" />
    <javac includeantruntime="true"
	   nowarn="true"
               srcdir="test"
              destdir="${classOutputDir}/test-classes/"
                debug="yes"
	             fork="yes"
		     executable="${major}">
            <classpath refid="test.path" />
        </javac>
   </target>

  <!-- major-run-mutation -->
   <target name="test.major" description="Run all unit test cases">
        <echo message="Running unit tests ..."/>
        <junit  printsummary="true"
        		showoutput="true"
			haltonfailure="false">
	  <classpath refid="test.path" />
	  <formatter type="plain" usefile="false"/>
            <classpath path="${classOutputDir}"/>

			<batchtest fork="no">
                <fileset dir="test">
                    <include name="**/${test-suite}.java"/>
                </fileset>
            </batchtest>
        </junit>
   </target>

   <target name="mutation.test.major" description="Run mutation analysis for all unit test cases with major">
        <echo message="Running mutation analysis ..."/>
        <junit  printsummary="false"
        	showoutput="false"
            mutationAnalysis="true"
            exportKillMap="true"
            killMapFile="../csvfiles/killMap.csv"
            resultFile="../csvfiles/results.csv"
                    killDetailsFile="../csvfiles/killed.csv"
            summaryFile="../csvfiles/summary.csv"
            testMapFile="../csvfiles/testMap.csv"
            mutantsLogFile="../mutants.log">
	  <classpath refid="test.path" />
		<classpath path="${classOutputDir}/classes"/>

			<batchtest fork="nofalse">
                <fileset dir="test">
                    <include name="**/${test-suite}.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

  <!-- pit-run-mutation -->
  	<path id="pitest.path">
   		<pathelement location="lib/junit-4.12.jar" />
		<pathelement location="lib/pitest-1.1.10.jar" />
		<pathelement location="lib/pitest-ant-1.1.10.jar" />
		<pathelement location="lib/hamcrest-core-1.3.jar"/>
	</path>

	<taskdef name="pitest" classname="org.pitest.ant.PitestTask" classpathref="pitest.path" />

	<target name="pitdefault" depends="test">
	  <path id="mutation.path">
			<path refid="pitest.path"/>
			<path refid="test.path"/>
	  </path>
	  <pitest
              pitClasspath="pitest.path"
              classPath="mutation.path"
              targetClasses="tr.*"
              targetTests="*.${test-suite}"
              reportDir="pitReport/default/${test-suite}"
              sourceDir="src"
	      outputFormats="csv,html"/>
	</target>

	<target name="pitall" depends="test">
	  <path id="mutation.path">
			<path refid="pitest.path"/>
			<path refid="test.path"/>
	  </path>
	  <pitest
              pitClasspath="pitest.path"
              classPath="mutation.path"
              targetClasses="tr.*"
              targetTests="*.${test-suite}"
              reportDir="pitReport/all/${test-suite}"
              sourceDir="src"
	      mutators="ALL"
	      outputFormats="csv,html"/>
	</target>



</project>
